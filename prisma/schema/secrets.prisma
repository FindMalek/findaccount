/**
 * Represents a secret stored in the system.
 * @property id - Unique identifier for the secret. Type: String. Generated using cuid().
 * @property name - Name of the secret. Type: String.
 * @property note - Note or description of the secret. Type: String. Optional.
 * @property iv - Initialization vector for encryption. Type: String.
 * @property value - Encrypted value of the secret. Type: String.
 * @property encryptionKey - Encryption key for the secret. Type: String.
 * @property metadata - Metadata associated with the secret. Type: SecretMetadata[]. Relation to SecretMetadata model.
 * @property lastCopied - Timestamp when the secret was last copied. Type: DateTime. Optional.
 * @property lastViewed - Timestamp when the secret was last viewed. Type: DateTime. Optional.
 * @property updatedAt - Timestamp when the secret was last updated. Type: DateTime. Updated automatically.
 * @property createdAt - Timestamp when the secret was created. Type: DateTime. Defaults to current time.
 * @property userId - ID of the user who owns the secret. Type: String.
 * @property user - User who owns the secret. Type: User. Relation to User model.
 * @property containerId - ID of the container where the secret is stored. Type: String.
 * @property container - Container where the secret is stored. Type: Container. Relation to Container model.
 */
model Secret {
  id String @id @default(cuid())

  name String
  note String?

  // Encrypted value using EncryptedData model
  valueEncryptionId String
  valueEncryption   EncryptedData @relation("SecretValue", fields: [valueEncryptionId], references: [id])

  metadata SecretMetadata[]

  lastCopied DateTime?
  lastViewed DateTime?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  containerId String
  container   Container @relation(fields: [containerId], references: [id])

  @@index([userId])
  @@index([containerId])
  @@index([valueEncryptionId])
}

/**
 * Represents metadata associated with a secret.
 * @property id - Unique identifier for the metadata. Type: String. Generated using cuid().
 * @property type - Type of the secret. Type: SecretType.
 * @property status - Status of the secret. Type: SecretStatus. Defaults to ACTIVE.
 * @property otherInfo - Additional information for the secret. Type: Json[].
 * @property expiresAt - Timestamp when the secret expires. Type: DateTime. Optional.
 * @property secretId - ID of the secret. Type: String.
 * @property secret - Secret associated with the metadata. Type: Secret. Relation to Secret model.
 */
model SecretMetadata {
  id String @id @default(cuid())

  type   SecretType
  status SecretStatus @default(ACTIVE)

  otherInfo Json[]

  expiresAt DateTime?

  secretId String
  secret   Secret @relation(fields: [secretId], references: [id])

  @@index([secretId])
}
