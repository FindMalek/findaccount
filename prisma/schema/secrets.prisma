/**
 * Represents an environment variable stored in the system.
 * @property id - Unique identifier for the environment variable. Type: String. Generated using cuid().
 * @property platform - Platform associated with the environment variable. Type: Platform. Relation to Platform model.
 * @property platformId - ID of the platform associated with the environment variable. Type: String.
 * @property name - Name of the environment variable. Type: String.
 * @property type - Type of the environment variable. Type: SecretType.
 * @property value - Value of the environment variable. Type: String.
 * @property description - Description of the environment variable. Type: String. Optional.
 * @property expiresAt - Timestamp when the environment variable expires. Type: DateTime. Optional.
 * @property status - Status of the environment variable. Type: SecretStatus. Defaults to ACTIVE.
 * @property createdAt - Timestamp when the environment variable was created. Type: DateTime. Defaults to current time.
 * @property updatedAt - Timestamp when the environment variable was last updated. Type: DateTime. Updated automatically.
 * @property user - User who owns the environment variable. Type: User. Relation to User model.
 * @property userId - ID of the user who owns the environment variable. Type: String.
 * @property container - Container where the environment variable is stored. Type: Container. Optional. Relation to Container model.
 * @property containerId - ID of the container where the environment variable is stored. Type: String. Optional.
 * @property tags - Tags associated with the environment variable. Type: Tag[]. Relation to Tag model.
 */
model Secret {
  id String @id @default(cuid())

  name  String
  value String

  description String?

  type   SecretType
  status SecretStatus @default(ACTIVE)

  tags Tag[]

  expiresAt DateTime?
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  containerId String?
  container   Container? @relation(fields: [containerId], references: [id])

  platformId String
  platform   Platform @relation(fields: [platformId], references: [id])

  @@index([userId])
  @@index([containerId])
  @@index([platformId])
}
