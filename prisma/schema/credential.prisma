/**
 * Represents a credential stored in the system.
 * @property id - Unique identifier for the credential. Type: String. Generated using cuid().
 * @property platform - Platform associated with the credential. Type: Platform. Relation to Platform model.
 * @property platformId - ID of the platform associated with the credential. Type: String.
 * @property username - Username for the credential. Type: String.
 * @property password - Password for the credential. Type: String.
 * @property encryptionKey - Encryption key for the credential. Type: String.
 * @property iv - Initialization vector for the credential. Type: String.
 * @property description - Description of the credential. Type: String. Optional.
 * @property loginUrl - URL for logging into the credential. Type: String. Optional.
 * @property status - Status of the credential. Type: AccountStatus. Defaults to ACTIVE.
 * @property lastCopied - Timestamp when the credential was last copied. Type: DateTime. Optional.
 * @property lastViewed - Timestamp when the credential was last viewed. Type: DateTime. Optional.
 * @property createdAt - Timestamp when the credential was created. Type: DateTime. Defaults to current time.
 * @property updatedAt - Timestamp when the credential was last updated. Type: DateTime. Updated automatically.
 * @property user - User who owns the credential. Type: User. Relation to User model.
 * @property userId - ID of the user who owns the credential. Type: String.
 * @property container - Container where the credential is stored. Type: Container. Optional. Relation to Container model.
 * @property containerId - ID of the container where the credential is stored. Type: String. Optional.
 * @property tags - Tags associated with the credential. Type: Tag[]. Relation to Tag model.
 * @property history - History of changes to the credential. Type: CredentialHistory[]. Relation to CredentialHistory model.
 * @property metadata - Metadata associated with the credential. Type: CredentialMetadata[]. Relation to CredentialMetadata model.
 */
model Credential {
  id String @id @default(cuid())

  username String

  iv String
  password String
  encryptionKey String

  status AccountStatus @default(ACTIVE)

  description String?
  loginUrl    String?

  tags     Tag[]
  history  CredentialHistory[]
  metadata CredentialMetadata[]

  lastCopied DateTime?
  lastViewed DateTime?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())

  platformId String
  platform   Platform @relation(fields: [platformId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  containerId String?
  container   Container? @relation(fields: [containerId], references: [id])

  @@index([userId])
  @@index([containerId])
  @@index([platformId])
}

/**
 * Represents the history of changes to a credential.
 * @property id - Unique identifier for the history entry. Type: String. Generated using cuid().
 * @property credentialId - ID of the credential. Type: String. Relation to Credential model.
 * @property credential - Credential associated with the history entry. Type: Credential. Relation to Credential model.
 * @property oldPassword - Old password of the credential. Type: String.
 * @property newPassword - New password of the credential. Type: String.
 * @property encryptionKey - Encryption key for the credential. Type: String.
 * @property iv - Initialization vector for the credential. Type: String.
 * @property changedAt - Timestamp when the password was changed. Type: DateTime. Defaults to current time.
 * @property user - User who made the change. Type: User. Relation to User model.
 * @property userId - ID of the user who made the change. Type: String.
 */
model CredentialHistory {
  id String @id @default(cuid())

  oldPassword String
  newPassword String
  encryptionKey String
  iv String

  changedAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  credentialId String
  credential   Credential @relation(fields: [credentialId], references: [id])

  @@index([credentialId])
  @@index([userId])
}

/**
 * Represents metadata associated with a credential.
 * @property id - Unique identifier for the metadata. Type: String. Generated using cuid().
 * @property credentialId - ID of the credential. Type: String. Relation to Credential model.
 * @property credential - Credential associated with the metadata. Type: Credential. Relation to Credential model.
 * @property recoveryEmail - Recovery email for the credential. Type: String. Optional.
 * @property accountId - Account ID for the credential. Type: String. Optional.
 * @property iban - IBAN for the credential. Type: String. Optional.
 * @property bankName - Bank name for the credential. Type: String. Optional.
 * @property otherInfo - Other information for the credential. Type: String. Optional.
 * @property has2FA - Whether the credential has 2FA. Type: Boolean. Defaults to false.
 */
model CredentialMetadata {
  id String @id @default(cuid())

  recoveryEmail String?
  accountId     String?
  iban          String?
  bankName      String?
  otherInfo     String?

  has2FA Boolean @default(false)

  credentialId String
  credential   Credential @relation(fields: [credentialId], references: [id])

  @@index([credentialId])
}
